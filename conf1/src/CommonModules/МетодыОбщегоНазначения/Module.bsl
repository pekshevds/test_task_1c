#Область ПрограммныйИнтерфейс

// Рассчитывает количество месяцев в заданном периоде
//
// Параметры:
//  НачалоПериода  - Дата - Начало периода расчета
//  КонецПериода  - Дата - Конец периода расчета
//
// Возвращаемое значение:
//   Массив из Дата   - Массив месяцев в указанном периоде
//
Функция ПолучитьСписокМесяцевВПериоде(НачалоПериода, КонецПериода)Экспорт 

	МассивМесяцев = Новый Массив;
	Если КонецПериода < НачалоПериода Тогда 
		
		Возврат МассивМесяцев;
	КонецЕсли;
	
	ОчереднойМесяц = НачалоМесяца(НачалоПериода);
	Пока ОчереднойМесяц <= НачалоМесяца(КонецПериода) Цикл 
		
		МассивМесяцев.Добавить(ОчереднойМесяц);
		ОчереднойМесяц = НачалоМесяца(ДобавитьМесяц(ОчереднойМесяц, 1));
	КонецЦикла;
	
	Возврат МассивМесяцев;
КонецФункции // ПолучитьСписокМесяцевВПериоде()

// Определяет является ли указанная дата выходным днем
//
// Параметры:
//  Дата  - Дата - Дата для определения выходной, ли
//  КонецПериода  - Дата - Конец периода расчета
//
// Возвращаемое значение:
//   Булево   - Если выходной (суббота, воскресенье) Истина, иначе Ложь
//
Функция ЭтоВыходной(Дата)Экспорт 
	
	Выходные = Новый Массив;
	Выходные.Добавить("суббота");
	Выходные.Добавить("воскресенье");
	
	Если Выходные.Найти(Формат(Дата, "ДФ=dddd")) = Неопределено Тогда 
		
		Возврат Ложь;
	КонецЕсли;       
	Возврат Истина;
КонецФункции // ЭтоВыходной()

// Считывает данные из текстового файла
//
// Параметры:
//  ИмяФайла  - Строка - Полный путь к файлу  
//
// Возвращаемое значение:
//   Строка   - Содержимое текстового файла
//
Функция ПрочитатьДанныеИзФайла(ИмяФайла)Экспорт
		
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ИмяФайла, КодировкаТекста.UTF8);
	Возврат ТекстовыйДокумент.ПолучитьТекст()
КонецФункции  // ПрочитатьДанныеИзФайла()

#КонецОбласти
